package reception;

import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

import connection.BackEndRead;
import connection.DatabaseConnection;
import types.Appointment;
import types.people.Partner;

/**
 *
 * @author alexandrabutoi
 */
public class SecretaryFrame extends javax.swing.JFrame {

    /**
     * Creates new form SecretaryFrame
     */
    public SecretaryFrame() {
        initComponents();
    }

    private Date getMondayDate() {
        LocalDateTime thisWeeksMonday = LocalDateTime.now().with(DayOfWeek.MONDAY);

        Date date = Date.valueOf(thisWeeksMonday.toLocalDate());

        System.out.println(date);

        return date;

    }

    private Date getFridayDate() {
        LocalDateTime thisWeeksMonday = LocalDateTime.now().with(DayOfWeek.FRIDAY);
        Date date = Date.valueOf(thisWeeksMonday.toLocalDate());

        System.out.println(date);

        return date;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoPanel = new LogoPanel();
        mainPanel = new javax.swing.JPanel();
        modifyPatientPanel = new ModifyPatientPanel();
        newAppPanel = new NewAppPanel();
        registerPatientPanel = new RegisterPatientPanel();
        reviewAppPanel = new ReviewAppPanel();
        appointmentsPanel = new AppointmentsPanel();
        findAppointmentPanel = new FindAppointmentPanel();
        findPatientPanel = new FindPatientPanel(modifyPatientPanel);
        menuPanel = new javax.swing.JPanel();
        regPatientButton = new javax.swing.JButton();
        findPatientButton = new javax.swing.JButton();
        appointmentsButton = new javax.swing.JButton();
        newAppointmentButton = new javax.swing.JButton();
        findAppointmentButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Information System");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(169, 188, 208));
        setResizable(false);

        mainPanel.setLayout(new java.awt.CardLayout());
        mainPanel.add(modifyPatientPanel, "card3");
        mainPanel.add(newAppPanel, "card4");
        mainPanel.add(registerPatientPanel, "card5");
        mainPanel.add(reviewAppPanel, "card6");
        mainPanel.add(appointmentsPanel, "card6");
        mainPanel.add(findAppointmentPanel, "card7");
        mainPanel.add(findPatientPanel, "card8");

        menuPanel.setBackground(new java.awt.Color(137, 137, 138));
        menuPanel.setPreferredSize(new java.awt.Dimension(1000, 90));

        regPatientButton.setBackground(new java.awt.Color(234, 244, 244));
        regPatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add_patient.png"))); // NOI18N
        regPatientButton.setText("Register Patient");
        regPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regPatientButtonActionPerformed(evt);
            }
        });

        findPatientButton.setBackground(new java.awt.Color(234, 244, 244));
        findPatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/find_patient.png"))); // NOI18N
        findPatientButton.setText("Find Patient");
        findPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPatientButtonActionPerformed(evt);
            }
        });

        appointmentsButton.setBackground(new java.awt.Color(234, 244, 244));
        appointmentsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appointments.png"))); // NOI18N
        appointmentsButton.setText("Appointments");
        appointmentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentsButtonActionPerformed(evt);
            }
        });

        newAppointmentButton.setBackground(new java.awt.Color(234, 244, 244));
        newAppointmentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add_appointment.png"))); // NOI18N
        newAppointmentButton.setText("New Appointment");
        newAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAppointmentButtonActionPerformed(evt);
            }
        });

        findAppointmentButton.setBackground(new java.awt.Color(234, 244, 244));
        findAppointmentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/find_appointment.png"))); // NOI18N
        findAppointmentButton.setText("Find Appointment");
        findAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentButtonActionPerformed(evt);
            }
        });

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                windowClosedActionPerformed(windowEvent);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(menuPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addContainerGap().addComponent(appointmentsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newAppointmentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(findAppointmentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                        .addComponent(regPatientButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(findPatientButton).addContainerGap()));
        menuPanelLayout.setVerticalGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(menuPanelLayout.createSequentialGroup().addGap(18, 18, 18)
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(regPatientButton).addComponent(findPatientButton)
                                .addComponent(appointmentsButton).addComponent(newAppointmentButton)
                                .addComponent(findAppointmentButton))
                        .addContainerGap(10, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(logoPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6))
                .addGroup(layout.createSequentialGroup().addContainerGap()
                        .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup().addContainerGap()
                        .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 602,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12).addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 63,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE)));

        pack();

    }// </editor-fold>//GEN-END:initComponents

    private void windowClosedActionPerformed(java.awt.event.WindowEvent e) {
        if (DatabaseConnection.getConnection() != null) {
            DatabaseConnection.closeConnection();
            System.out.println("Connection closed");
        }

        System.out.println("Window closed!");
    }

    private void findAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_findAppointmentButtonActionPerformed
        // TODO add your handling code here:
        appointmentsPanel.setVisible(false);
        findAppointmentPanel.setVisible(true);
        findPatientPanel.setVisible(false);
        modifyPatientPanel.setVisible(false);
        newAppPanel.setVisible(false);
        registerPatientPanel.setVisible(false);
        reviewAppPanel.setVisible(false);
        repaint();
    }// GEN-LAST:event_findAppointmentButtonActionPerformed

    private void appointmentsButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_appointmentsButtonActionPerformed

        appointmentsPanel.setVisible(true);
        findAppointmentPanel.setVisible(false);
        findPatientPanel.setVisible(false);
        modifyPatientPanel.setVisible(false);
        newAppPanel.setVisible(false);
        registerPatientPanel.setVisible(false);
        reviewAppPanel.setVisible(false);

        // display appointments
        appointmentsPanel.getCalendarPanel1().cleanTable();
        appointmentsPanel.getCalendarPanel2().cleanTable();
        appointmentsPanel.getCalendarPanel1().prepareAppointmentsDentist();
        appointmentsPanel.getCalendarPanel2().prepareAppointmentsHygienist();

        repaint();
    }// GEN-LAST:event_appointmentsButtonActionPerformed

    private void newAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_newAppointmentButtonActionPerformed
        // TODO add your handling code here:ppointmentsPanel.setVisible(true);
        appointmentsPanel.setVisible(false);
        findAppointmentPanel.setVisible(false);
        findPatientPanel.setVisible(false);
        modifyPatientPanel.setVisible(false);
        newAppPanel.setVisible(true);
        registerPatientPanel.setVisible(false);
        reviewAppPanel.setVisible(false);
        repaint();
    }// GEN-LAST:event_newAppointmentButtonActionPerformed

    private void regPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_regPatientButtonActionPerformed
        // TODO add your handling code here:
        // System.exit(0);
        // System.out.println("reg pat button pressed!");
        appointmentsPanel.setVisible(false);
        findAppointmentPanel.setVisible(false);
        findPatientPanel.setVisible(false);
        modifyPatientPanel.setVisible(false);
        newAppPanel.setVisible(false);
        registerPatientPanel.setVisible(true);
        reviewAppPanel.setVisible(false);
        repaint();
    }// GEN-LAST:event_regPatientButtonActionPerformed

    private void findPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_findPatientButtonActionPerformed
        // TODO add your handling code here:
        appointmentsPanel.setVisible(false);
        findAppointmentPanel.setVisible(false);
        findPatientPanel.setVisible(true);
        modifyPatientPanel.setVisible(false);
        newAppPanel.setVisible(false);
        registerPatientPanel.setVisible(false);
        reviewAppPanel.setVisible(false);
        repaint();
    }// GEN-LAST:event_findPatientButtonActionPerformed

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecretaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecretaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecretaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecretaryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecretaryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appointmentsButton;
    private AppointmentsPanel appointmentsPanel;
    private javax.swing.JButton findAppointmentButton;
    private FindAppointmentPanel findAppointmentPanel;
    private javax.swing.JButton findPatientButton;
    private FindPatientPanel findPatientPanel;
    private LogoPanel logoPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private ModifyPatientPanel modifyPatientPanel;
    private NewAppPanel newAppPanel;
    private javax.swing.JButton newAppointmentButton;
    private javax.swing.JButton regPatientButton;
    private RegisterPatientPanel registerPatientPanel;
    private ReviewAppPanel reviewAppPanel;
    private Date startDate;
    private Date endDate;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the appointmentsPanel
     */
    public AppointmentsPanel getAppointmentsPanel() {
        return appointmentsPanel;
    }

    /**
     * @param appointmentsPanel
     *            the appointmentsPanel to set
     */
    public void setAppointmentsPanel(AppointmentsPanel appointmentsPanel) {
        this.appointmentsPanel = appointmentsPanel;
    }

    /**
     * @return the logoPanel
     */
    public LogoPanel getLogoPanel() {
        return logoPanel;
    }

    /**
     * @param logoPanel
     *            the logoPanel to set
     */
    public void setLogoPanel(LogoPanel logoPanel) {
        this.logoPanel = logoPanel;
    }

    /**
     * @return the modifyPatientPanel
     */
    public ModifyPatientPanel getModifyPatientPanel() {
        return modifyPatientPanel;
    }

    /**
     * @param modifyPatientPanel
     *            the modifyPatientPanel to set
     */
    public void setModifyPatientPanel(ModifyPatientPanel modifyPatientPanel) {
        this.modifyPatientPanel = modifyPatientPanel;
    }

    /**
     * @return the newAppPanel
     */
    public NewAppPanel getNewAppPanel() {
        return newAppPanel;
    }

    /**
     * @param newAppPanel
     *            the newAppPanel to set
     */
    public void setNewAppPanel(NewAppPanel newAppPanel) {
        this.newAppPanel = newAppPanel;
    }

    /**
     * @return the registerPatientPanel
     */
    public RegisterPatientPanel getRegisterPatientPanel() {
        return registerPatientPanel;
    }

    /**
     * @param registerPatientPanel
     *            the registerPatientPanel to set
     */
    public void setRegisterPatientPanel(RegisterPatientPanel registerPatientPanel) {
        this.registerPatientPanel = registerPatientPanel;
    }

    /**
     * @return the reviewAppPanel
     */
    public ReviewAppPanel getReviewAppPanel() {
        return reviewAppPanel;
    }

    /**
     * @param reviewAppPanel
     *            the reviewAppPanel to set
     */
    public void setReviewAppPanel(ReviewAppPanel reviewAppPanel) {
        this.reviewAppPanel = reviewAppPanel;
    }

    /**
     * @return the appointmentsButton
     */
    public javax.swing.JButton getAppointmentsButton() {
        return appointmentsButton;
    }

    /**
     * @param appointmentsButton
     *            the appointmentsButton to set
     */
    public void setAppointmentsButton(javax.swing.JButton appointmentsButton) {
        this.appointmentsButton = appointmentsButton;
    }

    /**
     * @return the findAppointmentButton
     */
    public javax.swing.JButton getFindAppointmentButton() {
        return findAppointmentButton;
    }

    /**
     * @param findAppointmentButton
     *            the findAppointmentButton to set
     */
    public void setFindAppointmentButton(javax.swing.JButton findAppointmentButton) {
        this.findAppointmentButton = findAppointmentButton;
    }

    /**
     * @return the findAppointmentPanel
     */
    public FindAppointmentPanel getFindAppointmentPanel() {
        return findAppointmentPanel;
    }

    /**
     * @param findAppointmentPanel
     *            the findAppointmentPanel to set
     */
    public void setFindAppointmentPanel(FindAppointmentPanel findAppointmentPanel) {
        this.findAppointmentPanel = findAppointmentPanel;
    }

    /**
     * @return the findPatientButton
     */
    public javax.swing.JButton getFindPatientButton() {
        return findPatientButton;
    }

    /**
     * @param findPatientButton
     *            the findPatientButton to set
     */
    public void setFindPatientButton(javax.swing.JButton findPatientButton) {
        this.findPatientButton = findPatientButton;
    }

    /**
     * @return the findPatientPanel1
     */
    public FindPatientPanel getFindPatientPanel1() {
        return findPatientPanel;
    }

    /**
     * @param findPatientPanel1
     *            the findPatientPanel1 to set
     */
    public void setFindPatientPanel1(FindPatientPanel findPatientPanel1) {
        this.findPatientPanel = findPatientPanel1;
    }

    /**
     * @return the newAppointmentButton
     */
    public javax.swing.JButton getNewAppointmentButton() {
        return newAppointmentButton;
    }

    /**
     * @param newAppointmentButton
     *            the newAppointmentButton to set
     */
    public void setNewAppointmentButton(javax.swing.JButton newAppointmentButton) {
        this.newAppointmentButton = newAppointmentButton;
    }

    /**
     * @return the regPatientButton
     */
    public javax.swing.JButton getRegPatientButton() {
        return regPatientButton;
    }

    /**
     * @param regPatientButton
     *            the regPatientButton to set
     */
    public void setRegPatientButton(javax.swing.JButton regPatientButton) {
        this.regPatientButton = regPatientButton;
    }
}
