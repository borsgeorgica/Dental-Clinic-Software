package reception;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.Date;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import javax.swing.table.DefaultTableModel;

import connection.BackEndRead;
import types.Appointment;
import types.people.Partner;
import types.people.Patient;

/**
 *
 * @author alexandrabutoi
 */
public class FindAppointmentPanel extends javax.swing.JPanel {

    /**
     * Creates new form FindAppointmentPanel
     */
    public FindAppointmentPanel() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();

    }

    private Date getDate() throws ParseException {
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        System.out.println(dateFormattedTextField.getText());
        Date date = new Date(df.parse(dateFormattedTextField.getText()).getTime());
        return date;
    }

    private void displayAppointments(ArrayList<Appointment> appointments, Time startTime) {
        for (Appointment app : appointments) {
            Date date = app.getDate();
            Time time = app.getStartTime();
            Partner partner = app.getPartner();
            String doctorName = partner.getName() + " " + partner.getSurname();
            Patient patient = app.getPatient();
            String patientName = patient.getName() + " " + patient.getSurname();
            Object[] row = { date, time, doctorName, patientName };
            if (time.equals(startTime))
                model.addRow(row);
        }
        repaint();
    }

    private void displayAppointments(ArrayList<Appointment> appointments) {
        for (Appointment app : appointments) {
            Date date = app.getDate();
            Time time = app.getStartTime();
            Partner partner = app.getPartner();
            String doctorName = partner.getName() + " " + partner.getSurname();
            Patient patient = app.getPatient();
            String patientName = patient.getName() + " " + patient.getSurname();
            Object[] row = { date, time, doctorName, patientName };
            model.addRow(row);

        }
        repaint();
    }

    public void cleanTable() {
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                model.setValueAt("", i, j);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        findAppLabel = new javax.swing.JLabel();
        FindAppButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        // dateFormattedTextField = new javax.swing.JFormattedTextField();
        DateFormat ft = new SimpleDateFormat("dd/MM/yyyy");
        DateFormat format = new SimpleDateFormat("hh:mm");
        dateFormattedTextField = new javax.swing.JFormattedTextField(ft);
        Date currentDate = new Date(System.currentTimeMillis());

        dateFormattedTextField.setText(ft.format(currentDate));

        jLabel2 = new javax.swing.JLabel();
        format = new SimpleDateFormat("hh:mm");
        timeFormattedTextField = new javax.swing.JFormattedTextField(format);
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        // model = (DefaultTableModel) jTable1.getModel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1000, 600));
        setMinimumSize(new java.awt.Dimension(1000, 600));

        findAppLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        findAppLabel.setText("Find Appointment");

        FindAppButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        FindAppButton.setText("Find Appointment");

        jLabel1.setText("Date");

        jLabel2.setText("Time");

        jLabel3.setText("Doctor");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Dentist");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Hygienist");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        FindAppButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    findAppButtonActionPerformed(evt);
                } catch (ParseException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

        }, new String[] { "Date", "Time", "Doctor", "Patient" }) {
            boolean[] canEdit = new boolean[] { false, false, false, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout
                        .createSequentialGroup().addGap(18, 18, 18).addComponent(jScrollPane1,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout
                        .createSequentialGroup().addGap(71, 71, 71).addComponent(jScrollPane1,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(143, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                javax.swing.GroupLayout.Alignment.TRAILING,
                layout.createSequentialGroup().addGap(45, 45, 45).addComponent(jLabel1).addGap(38, 38, 38)
                        .addComponent(dateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79).addComponent(jLabel2).addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(timeFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3))
                                .addGroup(layout.createSequentialGroup().addGap(10, 10, 10).addComponent(findAppLabel)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(52, 52, 52).addComponent(jRadioButton1).addGap(32, 32, 32).addComponent(jRadioButton2)
                        .addGap(88, 88, 88))
                .addGroup(layout.createSequentialGroup().addGap(400, 400, 400)
                        .addComponent(FindAppButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
                .createSequentialGroup().addGap(58, 58, 58).addComponent(findAppLabel).addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1)
                        .addComponent(dateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(timeFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3).addComponent(jRadioButton1).addComponent(jRadioButton2))
                .addGap(50, 50, 50)
                .addComponent(FindAppButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)));
    }// </editor-fold>//GEN-END:initComponents

    private void findAppButtonActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {// GEN-FIRST:event_regPatientButtonActionPerformed
        cleanTable();
        Date day = getDate();

        Partner dentist = new Partner("Dr", "Matt", "Dentist");
        Partner hygienist = new Partner("Dr", "Emily", "Hygine");

        BackEndRead read = new BackEndRead();

        DateFormat timeFormatter = new SimpleDateFormat("HH:mm");
        Time time = new Time(timeFormatter.parse(timeFormattedTextField.getText()).getTime());
        ArrayList<Appointment> appointments;
        if (jRadioButton2.isSelected())
            appointments = read.getPartnersDaysAppointments(day, hygienist);
        else
            appointments = read.getPartnersDaysAppointments(day, dentist);

        displayAppointments(appointments, time);
        repaint();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FindAppButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFormattedTextField dateFormattedTextField;

    private javax.swing.JLabel findAppLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField timeFormattedTextField;
    private DefaultTableModel model;
    // End of variables declaration//GEN-END:variables
}
